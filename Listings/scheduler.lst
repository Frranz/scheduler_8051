A51 MACRO ASSEMBLER  SCHEDULER                                                            11/09/2018 19:39:48 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\scheduler.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE scheduler.a51 SET(SMALL) DEBUG PRINT(.\Listings\scheduler.lst) OBJECT(.
                      \Objects\scheduler.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;#include <Reg517a.inc>
                +1     3     ;-------------------------------------------------------------------------------
                +1     4     ; Copyright 1995-1996 KEIL Software, Inc.
                +1     5     ; 80517A Processor Declarations
                +1     6     ;-------------------------------------------------------------------------------
                +1     7  +1 $save 
                +1   199  +1 $restore 
                +1   200     
                     201     
                     202     
                     203     NAME scheduler
                     204     PUBLIC scheduler
                     205             
                     206     EXTRN CODE(consoleProcess)      
                     207             
                     208             ;define timer2 interupt routine
----                 209             cseg at 001bh
001B 020000   F      210             jmp tihandler   
                     211             
                     212     schedulerSegment SEGMENT CODE
                     213             ; switch to the created relocatable segment
----                 214             RSEG schedulerSegment
                     215             
0000                 216     scheduler:
                     217             ;define process status values
  0000               218             statusNotRunning equ 0
  0001               219             statusStartReq equ 1
  0002               220             statusRunning equ 2
                     221             
                     222             ;start
0000                 223             org 0000h
                     224                     
0000 900000   F      225             mov dptr,#consoleProcess
0003 85825C          226             mov 0x5c,dpl
0006 85835E          227             mov 0x5e,dph
                     228             
                     229             ;enable all interrupts
0009 D2AF            230             setb eal
000B 758D00          231             mov th1,#0
000E 758B00          232             mov tl1,#0
                     233             
                     234             ;enable and start timer 1
0011 D2AB            235             setb et1
0013 D28E            236             setb tr1
                     237             
                     238             ;start console process DELETE THIS
0015 120000   F      239             call consoleProcess
0018 8032            240             jmp endloop
                     241             
                     242             
001A                 243     tihandler:
                     244             ;do scheduelr stuff here
                     245             
                     246             ;save old adress
                     247             ;put accu in save space to do some basic calc
001A F557            248             mov 0x57,A
A51 MACRO ASSEMBLER  SCHEDULER                                                            11/09/2018 19:39:48 PAGE     2

                     249             
                     250             ;save next adress of interruped process
                     251             ;find next adress space for the process
001C E558            252             mov A,0x58      ;moves process id in a
001E 23              253             rl      A               ;quick multiply A by two, because adress is 2 bits long
001F 245C            254             add A,#5ch      ;add offset to beginning of next adress area
                     255             
                     256             ;move adress from stack to calculated adress
                     257             ;first pop high
0021 F8              258             mov r0,A
0022 08              259             inc r0
0023 D0E0            260             pop ACC
                     261             ;then low
0025 F6              262             mov @r0,A
0026 18              263             dec r0
0027 D0E0            264             pop ACC
0029 F6              265             mov @r0,A
                     266             
002A                 267             findNextProcess:
                     268                     ;find next program to execute
002A E558            269                     mov A,0x58
002C 04              270                     inc A
                     271                     
                     272                     ;build modulo 3 (making 0 if its 3)
002D B40301          273                     cjne A,#3,justSkipTheLineBefore
0030 E4              274                     clr A
                     275                     
0031                 276                     justSkipTheLineBefore:
                     277                     ;save new current process
0031 F558            278                     mov 0x58,A
                     279                     
                     280                     ;check if started
0033 2459            281                     add A,#59h
0035 F8              282                     mov r0,A
0036 B602F1          283                     cjne @r0,#statusRunning,findNextProcess
                     284             
                     285             ;load context of next process
                     286             ;calc context adress
0039 E558            287             mov A,0x58
003B 23              288             rl  A
003C 245C            289             add A,#5ch
                     290             
                     291             ;push it onto stack
003E F8              292             mov r0,A
003F 8682            293             mov dpl,@r0
0041 C082            294             push dpl
0043 08              295             inc r0
0044 8683            296             mov dph,@r0
0046 C083            297             push dph
0048 32              298             reti
                     299             
0049 8008            300             jmp realend
                     301             
004B                 302     findNextProg:
                     303     ;       cjne r0,statusRunning,
                     304             
004B 32              305             reti
                     306             
004C                 307     endloop:
004C 00              308             nop
004D D2AE            309             setb wdt
004F D2BE            310             setb swdt
0051 80F9            311             jmp endloop
                     312             
0053                 313     realend:        
                     314     
A51 MACRO ASSEMBLER  SCHEDULER                                                            11/09/2018 19:39:48 PAGE     3

                     315             end
A51 MACRO ASSEMBLER  SCHEDULER                                                            11/09/2018 19:39:48 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E                T Y P E  V A L U E   ATTRIBUTES

AC. . . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . . .  D ADDR   00E0H   A   
ADCON0. . . . . . . .  D ADDR   00D8H   A   
ADCON1. . . . . . . .  D ADDR   00DCH   A   
ADDATH. . . . . . . .  D ADDR   00D9H   A   
ADDATL. . . . . . . .  D ADDR   00DAH   A   
ADEX. . . . . . . . .  B ADDR   00D8H.5 A   
ADM . . . . . . . . .  B ADDR   00D8H.3 A   
ARCON . . . . . . . .  D ADDR   00EFH   A   
B . . . . . . . . . .  D ADDR   00F0H   A   
BD. . . . . . . . . .  B ADDR   00D8H.7 A   
BSY . . . . . . . . .  B ADDR   00D8H.4 A   
CC4EN . . . . . . . .  D ADDR   00C9H   A   
CCEN. . . . . . . . .  D ADDR   00C1H   A   
CCH1. . . . . . . . .  D ADDR   00C3H   A   
CCH2. . . . . . . . .  D ADDR   00C5H   A   
CCH3. . . . . . . . .  D ADDR   00C7H   A   
CCH4. . . . . . . . .  D ADDR   00CFH   A   
CCL1. . . . . . . . .  D ADDR   00C2H   A   
CCL2. . . . . . . . .  D ADDR   00C4H   A   
CCL3. . . . . . . . .  D ADDR   00C6H   A   
CCL4. . . . . . . . .  D ADDR   00CEH   A   
CLK . . . . . . . . .  B ADDR   00D8H.6 A   
CLRMSK. . . . . . . .  D ADDR   00A6H   A   
CMEN. . . . . . . . .  D ADDR   00F6H   A   
CMH0. . . . . . . . .  D ADDR   00D3H   A   
CMH1. . . . . . . . .  D ADDR   00D5H   A   
CMH2. . . . . . . . .  D ADDR   00D7H   A   
CMH3. . . . . . . . .  D ADDR   00E3H   A   
CMH4. . . . . . . . .  D ADDR   00E5H   A   
CMH5. . . . . . . . .  D ADDR   00E7H   A   
CMH6. . . . . . . . .  D ADDR   00F3H   A   
CMH7. . . . . . . . .  D ADDR   00F5H   A   
CML0. . . . . . . . .  D ADDR   00D2H   A   
CML1. . . . . . . . .  D ADDR   00D4H   A   
CML2. . . . . . . . .  D ADDR   00D6H   A   
CML3. . . . . . . . .  D ADDR   00E2H   A   
CML4. . . . . . . . .  D ADDR   00E4H   A   
CML5. . . . . . . . .  D ADDR   00E6H   A   
CML6. . . . . . . . .  D ADDR   00F2H   A   
CML7. . . . . . . . .  D ADDR   00F4H   A   
CMSEL . . . . . . . .  D ADDR   00F7H   A   
COMCLRH . . . . . . .  D ADDR   00A4H   A   
COMCLRL . . . . . . .  D ADDR   00A3H   A   
COMSETH . . . . . . .  D ADDR   00A2H   A   
COMSETL . . . . . . .  D ADDR   00A1H   A   
CONSOLEPROCESS. . . .  C ADDR   -----       EXT
CRCH. . . . . . . . .  D ADDR   00CBH   A   
CRCL. . . . . . . . .  D ADDR   00CAH   A   
CTCON . . . . . . . .  D ADDR   00E1H   A   
CTRELH. . . . . . . .  D ADDR   00DFH   A   
CTRELL. . . . . . . .  D ADDR   00DEH   A   
CY. . . . . . . . . .  B ADDR   00D0H.7 A   
DPH . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . .  D ADDR   0082H   A   
DPSEL . . . . . . . .  D ADDR   0092H   A   
EADC. . . . . . . . .  B ADDR   00B8H.0 A   
EAL . . . . . . . . .  B ADDR   00A8H.7 A   
ENDLOOP . . . . . . .  C ADDR   004CH   R   SEG=SCHEDULERSEGMENT
ES. . . . . . . . . .  B ADDR   00A8H.4 A   
A51 MACRO ASSEMBLER  SCHEDULER                                                            11/09/2018 19:39:48 PAGE     5

ET0 . . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . . .  B ADDR   00A8H.5 A   
EX0 . . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . . .  B ADDR   00A8H.2 A   
EX2 . . . . . . . . .  B ADDR   00B8H.1 A   
EX3 . . . . . . . . .  B ADDR   00B8H.2 A   
EX4 . . . . . . . . .  B ADDR   00B8H.3 A   
EX5 . . . . . . . . .  B ADDR   00B8H.4 A   
EX6 . . . . . . . . .  B ADDR   00B8H.5 A   
EXEN2 . . . . . . . .  B ADDR   00B8H.7 A   
EXF2. . . . . . . . .  B ADDR   00C0H.7 A   
F0. . . . . . . . . .  B ADDR   00D0H.5 A   
F1. . . . . . . . . .  B ADDR   00D0H.1 A   
FINDNEXTPROCESS . . .  C ADDR   002AH   R   SEG=SCHEDULERSEGMENT
FINDNEXTPROG. . . . .  C ADDR   004BH   R   SEG=SCHEDULERSEGMENT
I2FR. . . . . . . . .  B ADDR   00C8H.5 A   
I3FR. . . . . . . . .  B ADDR   00C8H.6 A   
IADC. . . . . . . . .  B ADDR   00C0H.0 A   
IE0 . . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . . .  B ADDR   0088H.3 A   
IEN0. . . . . . . . .  D ADDR   00A8H   A   
IEN1. . . . . . . . .  D ADDR   00B8H   A   
IEN2. . . . . . . . .  D ADDR   009AH   A   
IEX2. . . . . . . . .  B ADDR   00C0H.1 A   
IEX3. . . . . . . . .  B ADDR   00C0H.2 A   
IEX4. . . . . . . . .  B ADDR   00C0H.3 A   
IEX5. . . . . . . . .  B ADDR   00C0H.4 A   
IEX6. . . . . . . . .  B ADDR   00C0H.5 A   
INT0. . . . . . . . .  B ADDR   00B0H.2 A   
INT1. . . . . . . . .  B ADDR   00B0H.3 A   
IP0 . . . . . . . . .  D ADDR   00A9H   A   
IP1 . . . . . . . . .  D ADDR   00B9H   A   
IRCON . . . . . . . .  D ADDR   00C0H   A   
IRCON1. . . . . . . .  D ADDR   00D1H   A   
IT0 . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . .  B ADDR   0088H.2 A   
JUSTSKIPTHELINEBEFORE  C ADDR   0031H   R   SEG=SCHEDULERSEGMENT
MD0 . . . . . . . . .  D ADDR   00E9H   A   
MD1 . . . . . . . . .  D ADDR   00EAH   A   
MD2 . . . . . . . . .  D ADDR   00EBH   A   
MD3 . . . . . . . . .  D ADDR   00ECH   A   
MD4 . . . . . . . . .  D ADDR   00EDH   A   
MD5 . . . . . . . . .  D ADDR   00EEH   A   
MX0 . . . . . . . . .  B ADDR   00D8H.0 A   
MX1 . . . . . . . . .  B ADDR   00D8H.1 A   
MX2 . . . . . . . . .  B ADDR   00D8H.2 A   
OV. . . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . . .  B ADDR   00D0H.0 A   
P0. . . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . . .  D ADDR   00B0H   A   
P4. . . . . . . . . .  D ADDR   00E8H   A   
P5. . . . . . . . . .  D ADDR   00F8H   A   
P6. . . . . . . . . .  D ADDR   00FAH   A   
P7. . . . . . . . . .  D ADDR   00DBH   A   
P8. . . . . . . . . .  D ADDR   00DDH   A   
PCON. . . . . . . . .  D ADDR   0087H   A   
PSW . . . . . . . . .  D ADDR   00D0H   A   
RB80. . . . . . . . .  B ADDR   0098H.2 A   
RD. . . . . . . . . .  B ADDR   00B0H.7 A   
REALEND . . . . . . .  C ADDR   0053H   R   SEG=SCHEDULERSEGMENT
REN0. . . . . . . . .  B ADDR   0098H.4 A   
RI0 . . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . . .  B ADDR   00D0H.3 A   
A51 MACRO ASSEMBLER  SCHEDULER                                                            11/09/2018 19:39:48 PAGE     6

RS1 . . . . . . . . .  B ADDR   00D0H.4 A   
RXD . . . . . . . . .  B ADDR   00B0H.0 A   
S0BUF . . . . . . . .  D ADDR   0099H   A   
S0CON . . . . . . . .  D ADDR   0098H   A   
S0RELH. . . . . . . .  D ADDR   00BAH   A   
S0RELL. . . . . . . .  D ADDR   00AAH   A   
S1BUF . . . . . . . .  D ADDR   009CH   A   
S1CON . . . . . . . .  D ADDR   009BH   A   
S1RELH. . . . . . . .  D ADDR   00BBH   A   
S1RELL. . . . . . . .  D ADDR   009DH   A   
SCHEDULER . . . . . .  C ADDR   0000H   R   SEG=SCHEDULERSEGMENT
SCHEDULERSEGMENT. . .  C SEG    0053H       REL=UNIT
SETMSK. . . . . . . .  D ADDR   00A5H   A   
SM0 . . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . . .  B ADDR   0098H.6 A   
SM20. . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . . .  D ADDR   0081H   A   
STATUSNOTRUNNING. . .  N NUMB   0000H   A   
STATUSRUNNING . . . .  N NUMB   0002H   A   
STATUSSTARTREQ. . . .  N NUMB   0001H   A   
SWDT. . . . . . . . .  B ADDR   00B8H.6 A   
SYSCON. . . . . . . .  D ADDR   00B1H   A   
T0. . . . . . . . . .  B ADDR   00B0H.4 A   
T1. . . . . . . . . .  B ADDR   00B0H.5 A   
T2CM. . . . . . . . .  B ADDR   00C8H.2 A   
T2CON . . . . . . . .  D ADDR   00C8H   A   
T2I0. . . . . . . . .  B ADDR   00C8H.0 A   
T2I1. . . . . . . . .  B ADDR   00C8H.1 A   
T2PS. . . . . . . . .  B ADDR   00C8H.7 A   
T2R0. . . . . . . . .  B ADDR   00C8H.3 A   
T2R1. . . . . . . . .  B ADDR   00C8H.4 A   
TB80. . . . . . . . .  B ADDR   0098H.3 A   
TCON. . . . . . . . .  D ADDR   0088H   A   
TF0 . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . . .  B ADDR   00C0H.6 A   
TH0 . . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . . .  D ADDR   00CDH   A   
TI0 . . . . . . . . .  B ADDR   0098H.1 A   
TIHANDLER . . . . . .  C ADDR   001AH   R   SEG=SCHEDULERSEGMENT
TL0 . . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . . .  D ADDR   00CCH   A   
TMOD. . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . . .  B ADDR   0088H.6 A   
TXD . . . . . . . . .  B ADDR   00B0H.1 A   
WDT . . . . . . . . .  B ADDR   00A8H.6 A   
WDTH. . . . . . . . .  D ADDR   0085H   A   
WDTL. . . . . . . . .  D ADDR   0084H   A   
WDTREL. . . . . . . .  D ADDR   0086H   A   
WR. . . . . . . . . .  B ADDR   00B0H.6 A   
XPAGE . . . . . . . .  D ADDR   0091H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
