A51 MACRO ASSEMBLER  CONSOLE                                                              11/08/2018 13:06:20 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\console.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE console.a51 SET(SMALL) DEBUG PRINT(.\Listings\console.lst) OBJECT(.\Obj
                      ects\console.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;#include <Reg517a.inc>
                +1     3     ;-------------------------------------------------------------------------------
                +1     4     ; Copyright 1995-1996 KEIL Software, Inc.
                +1     5     ; 80517A Processor Declarations
                +1     6     ;-------------------------------------------------------------------------------
                +1     7  +1 $save 
                +1   199  +1 $restore 
                +1   200     
                     201     
                     202     
                     203     NAME consoleProcess
                     204     PUBLIC consoleProcess
                     205     
                     206     EXTRN CODE (processA,processB)
                     207     
                     208     consoleSegment SEGMENT CODE
                     209             ; switch to the created relocatable segment
----                 210             RSEG consoleSegment
                     211                     
                     212             ;define process status values
  0000               213             statusNotRunning equ 0
  0001               214             statusStartReq equ 1
  0002               215             statusRunning equ 2
                     216     
0000                 217     consoleProcess:
                     218     
                     219             ;set default values for process status
                     220             ;proc_a is @ 0x60
0000 756000          221             mov 0x60,#statusNotRunning
                     222             ;proc_b is @0x61
0003 756100          223             mov 0x61,#statusNotRunning
                     224     
                     225     ;configure seriel port 0
0006 759850          226             mov s0con,#01010000b
0009 75D8C0          227             mov adcon0,#11000000b
000C 75BA03          228             mov s0relh,#00000011b
000F 75AAD9          229             mov s0rell,#11011001b
                     230     
0012                 231     waitloop:
                     232             ;check if receive interrupt flag is set
0012 D2AE            233             setb wdt
0014 D2BE            234             setb swdt
0016 3098F9          235             jnb RI0,waitloop
0019 A999            236             mov r1,s0buf
                     237             
                     238             ;check if input was a
001B E9              239             mov A,r1
001C 9461            240             SUBB A,#97
001E 600B            241             jz  inpIsA
                     242             
                     243             ;check if input was b
0020 14              244             dec A
0021 6015            245             jz  inpIsB
                     246             
                     247             ;check if input was c
0023 14              248             dec A
A51 MACRO ASSEMBLER  CONSOLE                                                              11/08/2018 13:06:20 PAGE     2

0024 601F            249             jz  inpIsC
                     250             
                     251             ;check if input was z
0026 29              252             add A,r1
0027 947A            253             subb A,#122
0029 601C            254             jz  inpIsZ
                     255             
                     256             
                     257     
002B                 258     inpIsA:
                     259             ;load status proc A in Reg A
002B E560            260             mov A,0x60
                     261             
                     262             ;check if A is not running already
002D B40019          263             cjne A,#0,readMoreInput
                     264             
                     265             ;check if A is not queued for being ready
0030 B40116          266             cjne A,#1,readMoreInput
                     267             
                     268             ;change status to request starting
0033 756002          269             mov 0x60,#2
                     270             
                     271     ;       call processA
0036 8011            272             jmp readMoreInput
                     273     
0038                 274     inpIsB:
                     275             ;load status proc A in Reg A
0038 E561            276             mov A,0x61
                     277             
                     278             ;check if A is not running already
003A B4000C          279             cjne A,#0,readMoreInput
                     280             
                     281             ;check if A is not queued for being ready
003D B40109          282             cjne A,#1,readMoreInput
                     283             
                     284             ;change status to request starting
0040 756102          285             mov 0x61,#2     
                     286             
                     287             ;call process b
0043 8004            288             jmp readMoreInput
                     289     
0045                 290     inpIsC:
0045 8002            291             jmp readMoreInput
                     292     
0047                 293     inpIsZ:
0047 8000            294             jmp readMoreInput
                     295     
0049                 296     readMoreInput:
0049 C298            297             clr RI0
004B 80C5            298             jmp waitloop
                     299             
004D                 300     endloop:
004D 00              301             nop
004E D2AE            302             setb wdt
0050 D2BE            303             setb swdt
0052 80F9            304             jmp endloop
                     305             end
A51 MACRO ASSEMBLER  CONSOLE                                                              11/08/2018 13:06:20 PAGE     3

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCON0 . . . . . .  D ADDR   00D8H   A   
ADCON1 . . . . . .  D ADDR   00DCH   A   
ADDATH . . . . . .  D ADDR   00D9H   A   
ADDATL . . . . . .  D ADDR   00DAH   A   
ADEX . . . . . . .  B ADDR   00D8H.5 A   
ADM. . . . . . . .  B ADDR   00D8H.3 A   
ARCON. . . . . . .  D ADDR   00EFH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BD . . . . . . . .  B ADDR   00D8H.7 A   
BSY. . . . . . . .  B ADDR   00D8H.4 A   
CC4EN. . . . . . .  D ADDR   00C9H   A   
CCEN . . . . . . .  D ADDR   00C1H   A   
CCH1 . . . . . . .  D ADDR   00C3H   A   
CCH2 . . . . . . .  D ADDR   00C5H   A   
CCH3 . . . . . . .  D ADDR   00C7H   A   
CCH4 . . . . . . .  D ADDR   00CFH   A   
CCL1 . . . . . . .  D ADDR   00C2H   A   
CCL2 . . . . . . .  D ADDR   00C4H   A   
CCL3 . . . . . . .  D ADDR   00C6H   A   
CCL4 . . . . . . .  D ADDR   00CEH   A   
CLK. . . . . . . .  B ADDR   00D8H.6 A   
CLRMSK . . . . . .  D ADDR   00A6H   A   
CMEN . . . . . . .  D ADDR   00F6H   A   
CMH0 . . . . . . .  D ADDR   00D3H   A   
CMH1 . . . . . . .  D ADDR   00D5H   A   
CMH2 . . . . . . .  D ADDR   00D7H   A   
CMH3 . . . . . . .  D ADDR   00E3H   A   
CMH4 . . . . . . .  D ADDR   00E5H   A   
CMH5 . . . . . . .  D ADDR   00E7H   A   
CMH6 . . . . . . .  D ADDR   00F3H   A   
CMH7 . . . . . . .  D ADDR   00F5H   A   
CML0 . . . . . . .  D ADDR   00D2H   A   
CML1 . . . . . . .  D ADDR   00D4H   A   
CML2 . . . . . . .  D ADDR   00D6H   A   
CML3 . . . . . . .  D ADDR   00E2H   A   
CML4 . . . . . . .  D ADDR   00E4H   A   
CML5 . . . . . . .  D ADDR   00E6H   A   
CML6 . . . . . . .  D ADDR   00F2H   A   
CML7 . . . . . . .  D ADDR   00F4H   A   
CMSEL. . . . . . .  D ADDR   00F7H   A   
COMCLRH. . . . . .  D ADDR   00A4H   A   
COMCLRL. . . . . .  D ADDR   00A3H   A   
COMSETH. . . . . .  D ADDR   00A2H   A   
COMSETL. . . . . .  D ADDR   00A1H   A   
CONSOLEPROCESS . .  C ADDR   0000H   R   SEG=CONSOLESEGMENT
CONSOLESEGMENT . .  C SEG    0054H       REL=UNIT
CRCH . . . . . . .  D ADDR   00CBH   A   
CRCL . . . . . . .  D ADDR   00CAH   A   
CTCON. . . . . . .  D ADDR   00E1H   A   
CTRELH . . . . . .  D ADDR   00DFH   A   
CTRELL . . . . . .  D ADDR   00DEH   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
DPSEL. . . . . . .  D ADDR   0092H   A   
EADC . . . . . . .  B ADDR   00B8H.0 A   
EAL. . . . . . . .  B ADDR   00A8H.7 A   
ENDLOOP. . . . . .  C ADDR   004DH   R   SEG=CONSOLESEGMENT
A51 MACRO ASSEMBLER  CONSOLE                                                              11/08/2018 13:06:20 PAGE     4

ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EX2. . . . . . . .  B ADDR   00B8H.1 A   
EX3. . . . . . . .  B ADDR   00B8H.2 A   
EX4. . . . . . . .  B ADDR   00B8H.3 A   
EX5. . . . . . . .  B ADDR   00B8H.4 A   
EX6. . . . . . . .  B ADDR   00B8H.5 A   
EXEN2. . . . . . .  B ADDR   00B8H.7 A   
EXF2 . . . . . . .  B ADDR   00C0H.7 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . .  B ADDR   00D0H.1 A   
I2FR . . . . . . .  B ADDR   00C8H.5 A   
I3FR . . . . . . .  B ADDR   00C8H.6 A   
IADC . . . . . . .  B ADDR   00C0H.0 A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00B8H   A   
IEN2 . . . . . . .  D ADDR   009AH   A   
IEX2 . . . . . . .  B ADDR   00C0H.1 A   
IEX3 . . . . . . .  B ADDR   00C0H.2 A   
IEX4 . . . . . . .  B ADDR   00C0H.3 A   
IEX5 . . . . . . .  B ADDR   00C0H.4 A   
IEX6 . . . . . . .  B ADDR   00C0H.5 A   
INPISA . . . . . .  C ADDR   002BH   R   SEG=CONSOLESEGMENT
INPISB . . . . . .  C ADDR   0038H   R   SEG=CONSOLESEGMENT
INPISC . . . . . .  C ADDR   0045H   R   SEG=CONSOLESEGMENT
INPISZ . . . . . .  C ADDR   0047H   R   SEG=CONSOLESEGMENT
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IP0. . . . . . . .  D ADDR   00A9H   A   
IP1. . . . . . . .  D ADDR   00B9H   A   
IRCON. . . . . . .  D ADDR   00C0H   A   
IRCON1 . . . . . .  D ADDR   00D1H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MD0. . . . . . . .  D ADDR   00E9H   A   
MD1. . . . . . . .  D ADDR   00EAH   A   
MD2. . . . . . . .  D ADDR   00EBH   A   
MD3. . . . . . . .  D ADDR   00ECH   A   
MD4. . . . . . . .  D ADDR   00EDH   A   
MD5. . . . . . . .  D ADDR   00EEH   A   
MX0. . . . . . . .  B ADDR   00D8H.0 A   
MX1. . . . . . . .  B ADDR   00D8H.1 A   
MX2. . . . . . . .  B ADDR   00D8H.2 A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00E8H   A   
P5 . . . . . . . .  D ADDR   00F8H   A   
P6 . . . . . . . .  D ADDR   00FAH   A   
P7 . . . . . . . .  D ADDR   00DBH   A   
P8 . . . . . . . .  D ADDR   00DDH   A   
PCON . . . . . . .  D ADDR   0087H   A   
PROCESSA . . . . .  C ADDR   -----       EXT
PROCESSB . . . . .  C ADDR   -----       EXT
PSW. . . . . . . .  D ADDR   00D0H   A   
RB80 . . . . . . .  B ADDR   0098H.2 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
A51 MACRO ASSEMBLER  CONSOLE                                                              11/08/2018 13:06:20 PAGE     5

READMOREINPUT. . .  C ADDR   0049H   R   SEG=CONSOLESEGMENT
REN0 . . . . . . .  B ADDR   0098H.4 A   
RI0. . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
S0BUF. . . . . . .  D ADDR   0099H   A   
S0CON. . . . . . .  D ADDR   0098H   A   
S0RELH . . . . . .  D ADDR   00BAH   A   
S0RELL . . . . . .  D ADDR   00AAH   A   
S1BUF. . . . . . .  D ADDR   009CH   A   
S1CON. . . . . . .  D ADDR   009BH   A   
S1RELH . . . . . .  D ADDR   00BBH   A   
S1RELL . . . . . .  D ADDR   009DH   A   
SETMSK . . . . . .  D ADDR   00A5H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM20 . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
STATUSNOTRUNNING .  N NUMB   0000H   A   
STATUSRUNNING. . .  N NUMB   0002H   A   
STATUSSTARTREQ . .  N NUMB   0001H   A   
SWDT . . . . . . .  B ADDR   00B8H.6 A   
SYSCON . . . . . .  D ADDR   00B1H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CM . . . . . . .  B ADDR   00C8H.2 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2I0 . . . . . . .  B ADDR   00C8H.0 A   
T2I1 . . . . . . .  B ADDR   00C8H.1 A   
T2PS . . . . . . .  B ADDR   00C8H.7 A   
T2R0 . . . . . . .  B ADDR   00C8H.3 A   
T2R1 . . . . . . .  B ADDR   00C8H.4 A   
TB80 . . . . . . .  B ADDR   0098H.3 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C0H.6 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI0. . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WAITLOOP . . . . .  C ADDR   0012H   R   SEG=CONSOLESEGMENT
WDT. . . . . . . .  B ADDR   00A8H.6 A   
WDTH . . . . . . .  D ADDR   0085H   A   
WDTL . . . . . . .  D ADDR   0084H   A   
WDTREL . . . . . .  D ADDR   0086H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   
XPAGE. . . . . . .  D ADDR   0091H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
