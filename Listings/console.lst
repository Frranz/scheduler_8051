A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 18:32:23 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\console.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE console.a51 SET(SMALL) DEBUG PRINT(.\Listings\console.lst) OBJECT(.\Obj
                      ects\console.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;#include <Reg517a.inc>
                +1     3     ;-------------------------------------------------------------------------------
                +1     4     ; Copyright 1995-1996 KEIL Software, Inc.
                +1     5     ; 80517A Processor Declarations
                +1     6     ;-------------------------------------------------------------------------------
                +1     7  +1 $save 
                +1   199  +1 $restore 
                +1   200     
                     201     
                     202     
                     203     NAME consoleProcess
                     204     PUBLIC consoleProcess
                     205     
                     206     EXTRN CODE (processA,processB,fkt_text)
                     207     
                     208     consoleSegment SEGMENT CODE
                     209             ; switch to the created relocatable segment
----                 210             RSEG consoleSegment
                     211                     
                     212             ;define process status values
  0000               213             statusNotRunning equ 0
  0001               214             statusStartReq equ 1
  0002               215             statusRunning equ 2
                     216     
0000                 217     consoleProcess: 
                     218     
                     219             ;testing stuff
0000 7817            220             mov r0,#17h
0002 7958            221             mov r1,#58h
0004 7E33            222             mov r6,#33h
0006 7F19            223             mov r7,#19h
0008 7493            224             mov A,#93h
                     225     
                     226     ;configure seriel port 0
000A 759850          227             mov s0con,#01010000b
000D 75D8C0          228             mov adcon0,#11000000b
0010 75BA03          229             mov s0relh,#00000011b
0013 75AAD9          230             mov s0rell,#11011001b
                     231     
0016                 232     waitloop:
                     233             ;check if receive interrupt flag is set
0016 D2AE            234             setb wdt
0018 D2BE            235             setb swdt
001A E58F            236             mov A,0x8f
001C 70F8            237             jnz waitloop                    ;wenn serial busy ist
001E 3098F5          238             jnb RI0,waitloop
0021 A999            239             mov r1,s0buf
                     240             
                     241             ;check if input was a
0023 E9              242             mov A,r1
0024 9461            243             SUBB A,#97
0026 600C            244             jz  inpIsA
                     245             
                     246             ;check if input was b
0028 14              247             dec A
0029 601C            248             jz  inpIsB
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 18:32:23 PAGE     2

                     249             
                     250             ;check if input was c
002B 14              251             dec A
002C 602C            252             jz  inpIsC
                     253             
                     254             ;check if input was z
002E 9417            255             subb A,#23
0030 602D            256             jz  inpIsZ
0032 8043            257             jmp readMoreInput
                     258             
                     259             
                     260     
0034                 261     inpIsA:
                     262             ;load status proc A in Reg A
0034 E51E            263             mov A,0x1e
                     264             
                     265             ;check if A is not running already
0036 B4003E          266             cjne A,#statusNotRunning,readMoreInput
                     267             
                     268             ;queue in for start by changing status and setting start adress
0039 751E01          269             mov 0x1e,#statusStartReq
003C 900000   F      270             mov dptr,#processA
003F 858223          271             mov 0x23,dpl
0042 858324          272             mov 0x24,dph
                     273             
                     274     ;       call processA
0045 8030            275             jmp readMoreInput
                     276     
0047                 277     inpIsB:
                     278             ;load status proc B in Reg A
0047 E51F            279             mov A,0x1f
                     280             
                     281             ;check if b is not running already
0049 B4002B          282             cjne A,#statusNotRunning,readMoreInput
                     283             
                     284             ;queue in for start by changing status and setting start adress
004C 751F01          285             mov 0x1f,#statusStartReq
004F 900000   F      286             mov dptr,#processB
0052 858225          287             mov 0x25,dpl
0055 858326          288             mov 0x26,dph
                     289             
                     290             ;call process b
0058 801D            291             jmp readMoreInput
                     292     
005A                 293     inpIsC:
                     294             ;0x2e status of process b
005A 751F00          295             mov 0x1f,#statusNotRunning
005D 8018            296             jmp readMoreInput
                     297     
005F                 298     inpIsZ:
                     299             ;load status fkttext in Reg A
005F E520            300             mov A,0x20
                     301             
                     302             ;check if fkt_Text is running already
0061 B4000E          303             cjne A,#statusNotRunning,stopZ
                     304             
                     305             ;queue in for start by changing status and setting start adress
0064 752001          306             mov 0x20,#statusStartReq
0067 900000   F      307             mov dptr,#fkt_text
006A 858227          308             mov 0x27,dpl
006D 858328          309             mov 0x28,dph
0070 8005            310             jmp readMoreInput
                     311     
0072                 312     stopZ:
0072 752000          313             mov 0x20,#statusNotRunning
0075 8000            314             jmp readMoreInput
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 18:32:23 PAGE     3

                     315     
0077                 316     readMoreInput:
0077 C298            317             clr RI0
0079 809B            318             jmp waitloop
                     319     
007B                 320     endloop:
007B 00              321             nop
007C D2AE            322             setb wdt
007E D2BE            323             setb swdt
0080 80F9            324             jmp endloop
                     325             end
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 18:32:23 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCON0 . . . . . .  D ADDR   00D8H   A   
ADCON1 . . . . . .  D ADDR   00DCH   A   
ADDATH . . . . . .  D ADDR   00D9H   A   
ADDATL . . . . . .  D ADDR   00DAH   A   
ADEX . . . . . . .  B ADDR   00D8H.5 A   
ADM. . . . . . . .  B ADDR   00D8H.3 A   
ARCON. . . . . . .  D ADDR   00EFH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BD . . . . . . . .  B ADDR   00D8H.7 A   
BSY. . . . . . . .  B ADDR   00D8H.4 A   
CC4EN. . . . . . .  D ADDR   00C9H   A   
CCEN . . . . . . .  D ADDR   00C1H   A   
CCH1 . . . . . . .  D ADDR   00C3H   A   
CCH2 . . . . . . .  D ADDR   00C5H   A   
CCH3 . . . . . . .  D ADDR   00C7H   A   
CCH4 . . . . . . .  D ADDR   00CFH   A   
CCL1 . . . . . . .  D ADDR   00C2H   A   
CCL2 . . . . . . .  D ADDR   00C4H   A   
CCL3 . . . . . . .  D ADDR   00C6H   A   
CCL4 . . . . . . .  D ADDR   00CEH   A   
CLK. . . . . . . .  B ADDR   00D8H.6 A   
CLRMSK . . . . . .  D ADDR   00A6H   A   
CMEN . . . . . . .  D ADDR   00F6H   A   
CMH0 . . . . . . .  D ADDR   00D3H   A   
CMH1 . . . . . . .  D ADDR   00D5H   A   
CMH2 . . . . . . .  D ADDR   00D7H   A   
CMH3 . . . . . . .  D ADDR   00E3H   A   
CMH4 . . . . . . .  D ADDR   00E5H   A   
CMH5 . . . . . . .  D ADDR   00E7H   A   
CMH6 . . . . . . .  D ADDR   00F3H   A   
CMH7 . . . . . . .  D ADDR   00F5H   A   
CML0 . . . . . . .  D ADDR   00D2H   A   
CML1 . . . . . . .  D ADDR   00D4H   A   
CML2 . . . . . . .  D ADDR   00D6H   A   
CML3 . . . . . . .  D ADDR   00E2H   A   
CML4 . . . . . . .  D ADDR   00E4H   A   
CML5 . . . . . . .  D ADDR   00E6H   A   
CML6 . . . . . . .  D ADDR   00F2H   A   
CML7 . . . . . . .  D ADDR   00F4H   A   
CMSEL. . . . . . .  D ADDR   00F7H   A   
COMCLRH. . . . . .  D ADDR   00A4H   A   
COMCLRL. . . . . .  D ADDR   00A3H   A   
COMSETH. . . . . .  D ADDR   00A2H   A   
COMSETL. . . . . .  D ADDR   00A1H   A   
CONSOLEPROCESS . .  C ADDR   0000H   R   SEG=CONSOLESEGMENT
CONSOLESEGMENT . .  C SEG    0082H       REL=UNIT
CRCH . . . . . . .  D ADDR   00CBH   A   
CRCL . . . . . . .  D ADDR   00CAH   A   
CTCON. . . . . . .  D ADDR   00E1H   A   
CTRELH . . . . . .  D ADDR   00DFH   A   
CTRELL . . . . . .  D ADDR   00DEH   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
DPSEL. . . . . . .  D ADDR   0092H   A   
EADC . . . . . . .  B ADDR   00B8H.0 A   
EAL. . . . . . . .  B ADDR   00A8H.7 A   
ENDLOOP. . . . . .  C ADDR   007BH   R   SEG=CONSOLESEGMENT
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 18:32:23 PAGE     5

ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EX2. . . . . . . .  B ADDR   00B8H.1 A   
EX3. . . . . . . .  B ADDR   00B8H.2 A   
EX4. . . . . . . .  B ADDR   00B8H.3 A   
EX5. . . . . . . .  B ADDR   00B8H.4 A   
EX6. . . . . . . .  B ADDR   00B8H.5 A   
EXEN2. . . . . . .  B ADDR   00B8H.7 A   
EXF2 . . . . . . .  B ADDR   00C0H.7 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . .  B ADDR   00D0H.1 A   
FKT_TEXT . . . . .  C ADDR   -----       EXT
I2FR . . . . . . .  B ADDR   00C8H.5 A   
I3FR . . . . . . .  B ADDR   00C8H.6 A   
IADC . . . . . . .  B ADDR   00C0H.0 A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00B8H   A   
IEN2 . . . . . . .  D ADDR   009AH   A   
IEX2 . . . . . . .  B ADDR   00C0H.1 A   
IEX3 . . . . . . .  B ADDR   00C0H.2 A   
IEX4 . . . . . . .  B ADDR   00C0H.3 A   
IEX5 . . . . . . .  B ADDR   00C0H.4 A   
IEX6 . . . . . . .  B ADDR   00C0H.5 A   
INPISA . . . . . .  C ADDR   0034H   R   SEG=CONSOLESEGMENT
INPISB . . . . . .  C ADDR   0047H   R   SEG=CONSOLESEGMENT
INPISC . . . . . .  C ADDR   005AH   R   SEG=CONSOLESEGMENT
INPISZ . . . . . .  C ADDR   005FH   R   SEG=CONSOLESEGMENT
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IP0. . . . . . . .  D ADDR   00A9H   A   
IP1. . . . . . . .  D ADDR   00B9H   A   
IRCON. . . . . . .  D ADDR   00C0H   A   
IRCON1 . . . . . .  D ADDR   00D1H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MD0. . . . . . . .  D ADDR   00E9H   A   
MD1. . . . . . . .  D ADDR   00EAH   A   
MD2. . . . . . . .  D ADDR   00EBH   A   
MD3. . . . . . . .  D ADDR   00ECH   A   
MD4. . . . . . . .  D ADDR   00EDH   A   
MD5. . . . . . . .  D ADDR   00EEH   A   
MX0. . . . . . . .  B ADDR   00D8H.0 A   
MX1. . . . . . . .  B ADDR   00D8H.1 A   
MX2. . . . . . . .  B ADDR   00D8H.2 A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00E8H   A   
P5 . . . . . . . .  D ADDR   00F8H   A   
P6 . . . . . . . .  D ADDR   00FAH   A   
P7 . . . . . . . .  D ADDR   00DBH   A   
P8 . . . . . . . .  D ADDR   00DDH   A   
PCON . . . . . . .  D ADDR   0087H   A   
PROCESSA . . . . .  C ADDR   -----       EXT
PROCESSB . . . . .  C ADDR   -----       EXT
PSW. . . . . . . .  D ADDR   00D0H   A   
RB80 . . . . . . .  B ADDR   0098H.2 A   
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 18:32:23 PAGE     6

RD . . . . . . . .  B ADDR   00B0H.7 A   
READMOREINPUT. . .  C ADDR   0077H   R   SEG=CONSOLESEGMENT
REN0 . . . . . . .  B ADDR   0098H.4 A   
RI0. . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
S0BUF. . . . . . .  D ADDR   0099H   A   
S0CON. . . . . . .  D ADDR   0098H   A   
S0RELH . . . . . .  D ADDR   00BAH   A   
S0RELL . . . . . .  D ADDR   00AAH   A   
S1BUF. . . . . . .  D ADDR   009CH   A   
S1CON. . . . . . .  D ADDR   009BH   A   
S1RELH . . . . . .  D ADDR   00BBH   A   
S1RELL . . . . . .  D ADDR   009DH   A   
SETMSK . . . . . .  D ADDR   00A5H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM20 . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
STATUSNOTRUNNING .  N NUMB   0000H   A   
STATUSRUNNING. . .  N NUMB   0002H   A   
STATUSSTARTREQ . .  N NUMB   0001H   A   
STOPZ. . . . . . .  C ADDR   0072H   R   SEG=CONSOLESEGMENT
SWDT . . . . . . .  B ADDR   00B8H.6 A   
SYSCON . . . . . .  D ADDR   00B1H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CM . . . . . . .  B ADDR   00C8H.2 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2I0 . . . . . . .  B ADDR   00C8H.0 A   
T2I1 . . . . . . .  B ADDR   00C8H.1 A   
T2PS . . . . . . .  B ADDR   00C8H.7 A   
T2R0 . . . . . . .  B ADDR   00C8H.3 A   
T2R1 . . . . . . .  B ADDR   00C8H.4 A   
TB80 . . . . . . .  B ADDR   0098H.3 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C0H.6 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI0. . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WAITLOOP . . . . .  C ADDR   0016H   R   SEG=CONSOLESEGMENT
WDT. . . . . . . .  B ADDR   00A8H.6 A   
WDTH . . . . . . .  D ADDR   0085H   A   
WDTL . . . . . . .  D ADDR   0084H   A   
WDTREL . . . . . .  D ADDR   0086H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   
XPAGE. . . . . . .  D ADDR   0091H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
