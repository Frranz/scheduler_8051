A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 21:02:07 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\console.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE console.a51 SET(SMALL) DEBUG PRINT(.\Listings\console.lst) OBJECT(.\Obj
                      ects\console.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;#include <Reg517a.inc>
                +1     3     ;-------------------------------------------------------------------------------
                +1     4     ; Copyright 1995-1996 KEIL Software, Inc.
                +1     5     ; 80517A Processor Declarations
                +1     6     ;-------------------------------------------------------------------------------
                +1     7  +1 $save 
                +1   199  +1 $restore 
                +1   200     
                     201     
                     202     
                     203     NAME consoleProcess
                     204     PUBLIC consoleProcess
                     205     
                     206     EXTRN CODE (processA,processB,fkt_text)
                     207     
                     208     ;define program as relocatable
                     209     consoleSegment SEGMENT CODE
----                 210             RSEG consoleSegment
                     211                     
                     212             ;define process status values
  0000               213             statusNotRunning equ 0
  0001               214             statusStartReq equ 1
  0002               215             statusRunning equ 2
                     216     
0000                 217     consoleProcess: 
                     218     
                     219     ;configure seriel port 0
0000 759850          220             mov s0con,#01010000b
0003 75D8C0          221             mov adcon0,#11000000b
0006 75BA03          222             mov s0relh,#00000011b
0009 75AAD9          223             mov s0rell,#11011001b
                     224     
000C                 225     waitloop:
                     226             ;check if receive interrupt flag is set
000C D2AE            227             setb wdt
000E D2BE            228             setb swdt
0010 E58F            229             mov A,0x8f
0012 70F8            230             jnz waitloop                    ;wait until ser0 isnt blocked anymore
0014 3098F5          231             jnb RI0,waitloop
0017 A999            232             mov r1,s0buf
                     233             
                     234             ;check if input was a
0019 E9              235             mov A,r1
001A 9461            236             SUBB A,#97
001C 600C            237             jz  inpIsA
                     238             
                     239             ;check if input was b
001E 14              240             dec A
001F 601F            241             jz  inpIsB
                     242             
                     243             ;check if input was c
0021 14              244             dec A
0022 6032            245             jz  inpIsC
                     246             
                     247             ;check if input was z
0024 9417            248             subb A,#23
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 21:02:07 PAGE     2

0026 6033            249             jz  inpIsZ
                     250             
                     251             ;if none of the above just continue reading
0028 804C            252             jmp readMoreInput
                     253             
                     254             
                     255     
002A                 256     inpIsA:
                     257             ;load status of proc A in Reg A
002A E51E            258             mov A,0x1e
                     259             
                     260             ;check if A is not running already
002C B40047          261             cjne A,#statusNotRunning,readMoreInput
                     262             
                     263             ;queue in for start by changing status, setting start adress and setting priority
002F 751E01          264             mov 0x1e,#statusStartReq
0032 900000   F      265             mov dptr,#processA
0035 858223          266             mov 0x23,dpl
0038 858324          267             mov 0x24,dph
003B 859293          268             mov 0x93,0x92
                     269             
                     270             
003E 8036            271             jmp readMoreInput
                     272     
0040                 273     inpIsB:
                     274             ;load status of proc B in Reg A
0040 E51F            275             mov A,0x1f
                     276             
                     277             ;check if b is not running already
0042 B40031          278             cjne A,#statusNotRunning,readMoreInput
                     279             
                     280             ;queue in for start by changing status, setting start adress and setting priority
0045 751F01          281             mov 0x1f,#statusStartReq
0048 900000   F      282             mov dptr,#processB
004B 858225          283             mov 0x25,dpl
004E 858326          284             mov 0x26,dph
0051 859495          285             mov 0x95,0x94
                     286             
                     287             
0054 8020            288             jmp readMoreInput
                     289     
0056                 290     inpIsC:
                     291             ;change status of proc B
0056 751F00          292             mov 0x1f,#statusNotRunning
0059 801B            293             jmp readMoreInput
                     294     
005B                 295     inpIsZ:
                     296             ;load status fkttext in Reg A
005B E520            297             mov A,0x20
                     298             
                     299             ;check if fkt_Text is running already
005D B40011          300             cjne A,#statusNotRunning,stopZ
                     301             
                     302             ;queue in for start by changing status and setting start adress
0060 752001          303             mov 0x20,#statusStartReq
0063 900000   F      304             mov dptr,#fkt_text
0066 858227          305             mov 0x27,dpl
0069 858328          306             mov 0x28,dph
006C 859697          307             mov 0x97,0x96
006F 8005            308             jmp readMoreInput
                     309     
0071                 310     stopZ:
                     311             ;change status of fkt_text
0071 752000          312             mov 0x20,#statusNotRunning
0074 8000            313             jmp readMoreInput
                     314     
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 21:02:07 PAGE     3

0076                 315     readMoreInput:
0076 C298            316             clr RI0
0078 8092            317             jmp waitloop
                     318     
007A                 319     endloop:
007A 00              320             nop
007B D2AE            321             setb wdt
007D D2BE            322             setb swdt
007F 80F9            323             jmp endloop
                     324             end
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 21:02:07 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCON0 . . . . . .  D ADDR   00D8H   A   
ADCON1 . . . . . .  D ADDR   00DCH   A   
ADDATH . . . . . .  D ADDR   00D9H   A   
ADDATL . . . . . .  D ADDR   00DAH   A   
ADEX . . . . . . .  B ADDR   00D8H.5 A   
ADM. . . . . . . .  B ADDR   00D8H.3 A   
ARCON. . . . . . .  D ADDR   00EFH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BD . . . . . . . .  B ADDR   00D8H.7 A   
BSY. . . . . . . .  B ADDR   00D8H.4 A   
CC4EN. . . . . . .  D ADDR   00C9H   A   
CCEN . . . . . . .  D ADDR   00C1H   A   
CCH1 . . . . . . .  D ADDR   00C3H   A   
CCH2 . . . . . . .  D ADDR   00C5H   A   
CCH3 . . . . . . .  D ADDR   00C7H   A   
CCH4 . . . . . . .  D ADDR   00CFH   A   
CCL1 . . . . . . .  D ADDR   00C2H   A   
CCL2 . . . . . . .  D ADDR   00C4H   A   
CCL3 . . . . . . .  D ADDR   00C6H   A   
CCL4 . . . . . . .  D ADDR   00CEH   A   
CLK. . . . . . . .  B ADDR   00D8H.6 A   
CLRMSK . . . . . .  D ADDR   00A6H   A   
CMEN . . . . . . .  D ADDR   00F6H   A   
CMH0 . . . . . . .  D ADDR   00D3H   A   
CMH1 . . . . . . .  D ADDR   00D5H   A   
CMH2 . . . . . . .  D ADDR   00D7H   A   
CMH3 . . . . . . .  D ADDR   00E3H   A   
CMH4 . . . . . . .  D ADDR   00E5H   A   
CMH5 . . . . . . .  D ADDR   00E7H   A   
CMH6 . . . . . . .  D ADDR   00F3H   A   
CMH7 . . . . . . .  D ADDR   00F5H   A   
CML0 . . . . . . .  D ADDR   00D2H   A   
CML1 . . . . . . .  D ADDR   00D4H   A   
CML2 . . . . . . .  D ADDR   00D6H   A   
CML3 . . . . . . .  D ADDR   00E2H   A   
CML4 . . . . . . .  D ADDR   00E4H   A   
CML5 . . . . . . .  D ADDR   00E6H   A   
CML6 . . . . . . .  D ADDR   00F2H   A   
CML7 . . . . . . .  D ADDR   00F4H   A   
CMSEL. . . . . . .  D ADDR   00F7H   A   
COMCLRH. . . . . .  D ADDR   00A4H   A   
COMCLRL. . . . . .  D ADDR   00A3H   A   
COMSETH. . . . . .  D ADDR   00A2H   A   
COMSETL. . . . . .  D ADDR   00A1H   A   
CONSOLEPROCESS . .  C ADDR   0000H   R   SEG=CONSOLESEGMENT
CONSOLESEGMENT . .  C SEG    0081H       REL=UNIT
CRCH . . . . . . .  D ADDR   00CBH   A   
CRCL . . . . . . .  D ADDR   00CAH   A   
CTCON. . . . . . .  D ADDR   00E1H   A   
CTRELH . . . . . .  D ADDR   00DFH   A   
CTRELL . . . . . .  D ADDR   00DEH   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
DPSEL. . . . . . .  D ADDR   0092H   A   
EADC . . . . . . .  B ADDR   00B8H.0 A   
EAL. . . . . . . .  B ADDR   00A8H.7 A   
ENDLOOP. . . . . .  C ADDR   007AH   R   SEG=CONSOLESEGMENT
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 21:02:07 PAGE     5

ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EX2. . . . . . . .  B ADDR   00B8H.1 A   
EX3. . . . . . . .  B ADDR   00B8H.2 A   
EX4. . . . . . . .  B ADDR   00B8H.3 A   
EX5. . . . . . . .  B ADDR   00B8H.4 A   
EX6. . . . . . . .  B ADDR   00B8H.5 A   
EXEN2. . . . . . .  B ADDR   00B8H.7 A   
EXF2 . . . . . . .  B ADDR   00C0H.7 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . .  B ADDR   00D0H.1 A   
FKT_TEXT . . . . .  C ADDR   -----       EXT
I2FR . . . . . . .  B ADDR   00C8H.5 A   
I3FR . . . . . . .  B ADDR   00C8H.6 A   
IADC . . . . . . .  B ADDR   00C0H.0 A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00B8H   A   
IEN2 . . . . . . .  D ADDR   009AH   A   
IEX2 . . . . . . .  B ADDR   00C0H.1 A   
IEX3 . . . . . . .  B ADDR   00C0H.2 A   
IEX4 . . . . . . .  B ADDR   00C0H.3 A   
IEX5 . . . . . . .  B ADDR   00C0H.4 A   
IEX6 . . . . . . .  B ADDR   00C0H.5 A   
INPISA . . . . . .  C ADDR   002AH   R   SEG=CONSOLESEGMENT
INPISB . . . . . .  C ADDR   0040H   R   SEG=CONSOLESEGMENT
INPISC . . . . . .  C ADDR   0056H   R   SEG=CONSOLESEGMENT
INPISZ . . . . . .  C ADDR   005BH   R   SEG=CONSOLESEGMENT
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IP0. . . . . . . .  D ADDR   00A9H   A   
IP1. . . . . . . .  D ADDR   00B9H   A   
IRCON. . . . . . .  D ADDR   00C0H   A   
IRCON1 . . . . . .  D ADDR   00D1H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MD0. . . . . . . .  D ADDR   00E9H   A   
MD1. . . . . . . .  D ADDR   00EAH   A   
MD2. . . . . . . .  D ADDR   00EBH   A   
MD3. . . . . . . .  D ADDR   00ECH   A   
MD4. . . . . . . .  D ADDR   00EDH   A   
MD5. . . . . . . .  D ADDR   00EEH   A   
MX0. . . . . . . .  B ADDR   00D8H.0 A   
MX1. . . . . . . .  B ADDR   00D8H.1 A   
MX2. . . . . . . .  B ADDR   00D8H.2 A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00E8H   A   
P5 . . . . . . . .  D ADDR   00F8H   A   
P6 . . . . . . . .  D ADDR   00FAH   A   
P7 . . . . . . . .  D ADDR   00DBH   A   
P8 . . . . . . . .  D ADDR   00DDH   A   
PCON . . . . . . .  D ADDR   0087H   A   
PROCESSA . . . . .  C ADDR   -----       EXT
PROCESSB . . . . .  C ADDR   -----       EXT
PSW. . . . . . . .  D ADDR   00D0H   A   
RB80 . . . . . . .  B ADDR   0098H.2 A   
A51 MACRO ASSEMBLER  CONSOLE                                                              11/11/2018 21:02:07 PAGE     6

RD . . . . . . . .  B ADDR   00B0H.7 A   
READMOREINPUT. . .  C ADDR   0076H   R   SEG=CONSOLESEGMENT
REN0 . . . . . . .  B ADDR   0098H.4 A   
RI0. . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
S0BUF. . . . . . .  D ADDR   0099H   A   
S0CON. . . . . . .  D ADDR   0098H   A   
S0RELH . . . . . .  D ADDR   00BAH   A   
S0RELL . . . . . .  D ADDR   00AAH   A   
S1BUF. . . . . . .  D ADDR   009CH   A   
S1CON. . . . . . .  D ADDR   009BH   A   
S1RELH . . . . . .  D ADDR   00BBH   A   
S1RELL . . . . . .  D ADDR   009DH   A   
SETMSK . . . . . .  D ADDR   00A5H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM20 . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
STATUSNOTRUNNING .  N NUMB   0000H   A   
STATUSRUNNING. . .  N NUMB   0002H   A   
STATUSSTARTREQ . .  N NUMB   0001H   A   
STOPZ. . . . . . .  C ADDR   0071H   R   SEG=CONSOLESEGMENT
SWDT . . . . . . .  B ADDR   00B8H.6 A   
SYSCON . . . . . .  D ADDR   00B1H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CM . . . . . . .  B ADDR   00C8H.2 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2I0 . . . . . . .  B ADDR   00C8H.0 A   
T2I1 . . . . . . .  B ADDR   00C8H.1 A   
T2PS . . . . . . .  B ADDR   00C8H.7 A   
T2R0 . . . . . . .  B ADDR   00C8H.3 A   
T2R1 . . . . . . .  B ADDR   00C8H.4 A   
TB80 . . . . . . .  B ADDR   0098H.3 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C0H.6 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI0. . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WAITLOOP . . . . .  C ADDR   000CH   R   SEG=CONSOLESEGMENT
WDT. . . . . . . .  B ADDR   00A8H.6 A   
WDTH . . . . . . .  D ADDR   0085H   A   
WDTL . . . . . . .  D ADDR   0084H   A   
WDTREL . . . . . .  D ADDR   0086H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   
XPAGE. . . . . . .  D ADDR   0091H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
